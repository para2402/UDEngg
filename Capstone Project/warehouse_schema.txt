osrshvhj
--------

HOW YOU STARTED THE PROJECT?
- Started with basic EDA like finding nulls and understanding the database
- The started defining the scope of the warehouse and the warehouse schema
- ......


STAR SCHEMA


DIMENSIONS:
==========
customer(customer_id, customer_unique_id, customer_zip_code_prefix, customer_city, customer_state)
seller(seller_id, seller_zip_code_prefix, seller_city, seller_state)
product(product_id, product_category_name{translated},
	product_description_length, product_photos_qty, product_weight_g,
	product_length_cm, product_height_cm, product_width_cm)
calender(calender_id, date, day, dayofweek, month, year)



FACT: ORDER_ITEMS (merging - orders, order_items, orders_reviews, orders_payments)
====
IMPORTANT observations:
- orders may be placed by customers from different geolocations and sellers may have multiple warehouses within a city/ state

JOIN orders AND order_items ON order_id

SERIAL PK order_item_id should be created
order_item(order_item_id[PK], product_id, seller_id,			--> order_items
	   shipping_limit_date, freight_value,				--> order_items
	   					qty,			--> order_items (derived measure - aggregate "order_item_id")
				 product_unit_price,			--> order_items (price -> product_unit_price)

				total_product_price,			--> qty*product_unit_price

				  total_order_price,			--> order_payments (derived measure - aggregate "payment_value")
	
	 				calender_id,			--> orders (derived from "order_purchase_timestamp" and calender dimension)
			  customer_id, order_status,			--> orders
				order_purchase_date, 			--> orders (EXTRACT DATE from "order_purchase_timestamp")
	   			order_approved_date,			--> orders (EXTRACT DATE from "order_approved_at")
		       order_delivered_carrier_date,			--> orders (EXTRACT DATE from "order_delivered_carrier_date")
	   	      order_delivered_customer_date,			--> orders (EXTRACT DATE from "order_delivered_customer_date")
	              order_estimated_delivery_date,			--> orders (EXTRACT DATE from "order_estimated_delivery_date")
	   
	   			avg_review_score,			--> order_reviews (derived measure)
	   )
				